{
  "openapi": "3.0.3",
  "info": {
    "title": "Knowledge Vector API",
    "version": "0.0.0"
  },
  "paths": {
    "/documents/": {
      "get": {
        "operationId": "documents_list",
        "tags": [
          "documents"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "documents_create",
        "tags": [
          "documents"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DocumentRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DocumentRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/documents/{id}/": {
      "get": {
        "operationId": "documents_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this document.",
            "required": true
          }
        ],
        "tags": [
          "documents"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "documents_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this document.",
            "required": true
          }
        ],
        "tags": [
          "documents"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/knowledge-models/": {
      "get": {
        "operationId": "knowledge_models_list",
        "tags": [
          "knowledge-models"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmbeddingModel"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/knowledge-models/{id}/": {
      "get": {
        "operationId": "knowledge_models_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this embedding model.",
            "required": true
          }
        ],
        "tags": [
          "knowledge-models"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingModel"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/search-models/": {
      "get": {
        "operationId": "search_models_list",
        "tags": [
          "search-models"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchModel"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/search-models/{id}/": {
      "get": {
        "operationId": "search_models_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this search model.",
            "required": true
          }
        ],
        "tags": [
          "search-models"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchModel"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/search/nodes/": {
      "post": {
        "operationId": "search_nodes_create",
        "description": "Search nodes by query.",
        "tags": [
          "search"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NodesSearchRequestRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodesSearchRequestRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NodesSearchRequestRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodesSearchResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/search/quick/": {
      "post": {
        "operationId": "search_quick_create",
        "description": "Quick search by query.",
        "tags": [
          "search"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/QuickSearchRequestRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuickSearchRequestRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/QuickSearchRequestRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickSearchResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/user/login/": {
      "post": {
        "operationId": "user_login_create",
        "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPairRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPairRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPairRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenObtainPair"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/user/refresh/": {
      "post": {
        "operationId": "user_refresh_create",
        "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefresh"
                }
              }
            },
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string"
          },
          "knowledge_model": {
            "type": "string",
            "title": "Отображаемое имя"
          },
          "processing_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProcessingStatusEnum"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "id",
          "knowledge_model",
          "processing_status"
        ]
      },
      "DocumentRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "writeOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "description": {
            "type": "string"
          },
          "knowledge_model": {
            "type": "string",
            "minLength": 1,
            "title": "Отображаемое имя"
          }
        },
        "required": [
          "file",
          "knowledge_model"
        ]
      },
      "EmbeddingModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "display_name": {
            "type": "string",
            "title": "Отображаемое имя",
            "maxLength": 128
          }
        },
        "required": [
          "display_name",
          "id"
        ]
      },
      "LanguageEnum": {
        "enum": [
          "ru",
          "en"
        ],
        "type": "string",
        "description": "* `ru` - Русский\n* `en` - Английский"
      },
      "Node": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "content": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "content",
          "id",
          "metadata",
          "score"
        ]
      },
      "NodesSearchRequestRequest": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "knowledge_model": {
            "type": "string",
            "minLength": 1,
            "title": "Отображаемое имя"
          },
          "similarity_cutoff": {
            "type": "number",
            "format": "double",
            "maximum": 1,
            "minimum": 0,
            "default": 0.5
          },
          "query": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "documents",
          "knowledge_model",
          "query"
        ]
      },
      "NodesSearchResponse": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "usage": {
            "$ref": "#/components/schemas/Usage"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "required": [
          "nodes",
          "usage"
        ]
      },
      "ProcessingStatusEnum": {
        "enum": [
          "error",
          "not_started",
          "in_progress",
          "done"
        ],
        "type": "string",
        "description": "* `error` - ❌ Ошибка векторизации\n* `not_started` - ❕ Не векторизован\n* `in_progress` - 🔎 Векторизуется\n* `done` - ✅ Векторизован"
      },
      "QuickSearchRequestRequest": {
        "type": "object",
        "properties": {
          "search_model": {
            "type": "string",
            "minLength": 1,
            "title": "Отображаемое имя"
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageEnum"
              }
            ],
            "description": "Язык документов\n\n* `ru` - Русский\n* `en` - Английский"
          },
          "knowledge_model": {
            "type": "string",
            "minLength": 1,
            "title": "Отображаемое имя"
          },
          "query": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "documents",
          "knowledge_model",
          "language",
          "query",
          "search_model"
        ]
      },
      "QuickSearchResponse": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "usage": {
            "$ref": "#/components/schemas/Usage"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "answer": {
            "type": "string"
          }
        },
        "required": [
          "answer",
          "nodes",
          "usage"
        ]
      },
      "SearchModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "display_name": {
            "type": "string",
            "title": "Отображаемое имя",
            "maxLength": 128
          }
        },
        "required": [
          "display_name",
          "id"
        ]
      },
      "TokenObtainPair": {
        "type": "object",
        "properties": {
          "access": {
            "type": "string",
            "readOnly": true
          },
          "refresh": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "access",
          "refresh"
        ]
      },
      "TokenObtainPairRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "password": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          }
        },
        "required": [
          "password",
          "username"
        ]
      },
      "TokenRefresh": {
        "type": "object",
        "properties": {
          "access": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "access"
        ]
      },
      "TokenRefreshRequest": {
        "type": "object",
        "properties": {
          "refresh": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          }
        },
        "required": [
          "refresh"
        ]
      },
      "Usage": {
        "type": "object",
        "properties": {
          "completion_llm_token_count": {
            "type": "integer"
          },
          "prompt_llm_token_count": {
            "type": "integer"
          },
          "total_llm_token_count": {
            "type": "integer"
          },
          "total_embedding_token_count": {
            "type": "integer"
          }
        },
        "required": [
          "completion_llm_token_count",
          "prompt_llm_token_count",
          "total_embedding_token_count",
          "total_llm_token_count"
        ]
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionid"
      },
      "jwtAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}